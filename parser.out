Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> linst
Rule 2     linst -> linst inst
Rule 3     linst -> inst
Rule 4     expression -> LPAREN expression RPAREN
Rule 5     expression -> NUMBER
Rule 6     expression -> NAME
Rule 7     inst -> NAME EQUAL expression SEMICOLON
Rule 8     assign -> NAME EQUAL expression
Rule 9     inst -> NAME PLUS EQUAL NUMBER SEMICOLON
Rule 10    inst -> NAME PLUS PLUS SEMICOLON
Rule 11    inst -> NAME MINUS EQUAL NUMBER SEMICOLON
Rule 12    inst -> NAME MINUS MINUS SEMICOLON
Rule 13    expressions -> expression COMMA expressions
Rule 14    expressions -> expression
Rule 15    inst -> PRINT LPAREN params RPAREN SEMICOLON
Rule 16    inst -> PRINT LPAREN expressions RPAREN SEMICOLON
Rule 17    expression -> expression PLUS expression
Rule 18    expression -> expression MINUS expression
Rule 19    expression -> expression TIMES expression
Rule 20    expression -> expression OR expression
Rule 21    expression -> expression AND expression
Rule 22    expression -> expression EQUALS expression
Rule 23    expression -> expression LOWER expression
Rule 24    expression -> expression HIGHER expression
Rule 25    expression -> expression DIVIDE expression
Rule 26    inst -> IF LPAREN expression RPAREN THEN inst
Rule 27    inst -> IF LPAREN expression RPAREN THEN inst ELSE inst
Rule 28    inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON
Rule 29    inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
Rule 30    params -> NAME COMMA params
Rule 31    params -> NAME
Rule 32    inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
Rule 33    inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
Rule 34    inst -> NAME LPAREN expressions RPAREN SEMICOLON
Rule 35    inst -> NAME LPAREN params RPAREN SEMICOLON
Rule 36    inst -> NAME LPAREN RPAREN SEMICOLON

Terminals, with rules where they appear

AND                  : 21
COMMA                : 13 30
DIVIDE               : 25
DO                   : 28 29
ELSE                 : 27
END                  : 28 29 32 33
EQUAL                : 7 8 9 11
EQUALS               : 22
FOR                  : 29
FUNCTION             : 32 33
HIGHER               : 24
IF                   : 26 27
LOWER                : 23
LPAREN               : 4 15 16 26 27 28 29 32 33 34 35 36
MINUS                : 11 12 12 18
NAME                 : 6 7 8 9 10 11 12 30 31 32 33 34 35 36
NUMBER               : 5 9 11
OR                   : 20
PLUS                 : 9 10 10 17
PRINT                : 15 16
RPAREN               : 4 15 16 26 27 28 29 32 33 34 35 36
SEMICOLON            : 7 9 10 11 12 15 16 28 29 29 29 32 33 34 35 36
THEN                 : 26 27
TIMES                : 19
WHILE                : 28
error                : 

Nonterminals, with rules where they appear

assign               : 29 29
expression           : 4 7 8 13 14 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 27 28 29
expressions          : 13 16 34
inst                 : 2 3 26 27 27
linst                : 1 2 28 29 32 33
params               : 15 30 32 35
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . linst
    (2) linst -> . linst inst
    (3) linst -> . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (9) inst -> . NAME PLUS EQUAL NUMBER SEMICOLON
    (10) inst -> . NAME PLUS PLUS SEMICOLON
    (11) inst -> . NAME MINUS EQUAL NUMBER SEMICOLON
    (12) inst -> . NAME MINUS MINUS SEMICOLON
    (15) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (16) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (26) inst -> . IF LPAREN expression RPAREN THEN inst
    (27) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (28) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (29) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (32) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (33) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (34) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (35) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (36) inst -> . NAME LPAREN RPAREN SEMICOLON

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    start                          shift and go to state 1
    linst                          shift and go to state 2
    inst                           shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> linst .
    (2) linst -> linst . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (9) inst -> . NAME PLUS EQUAL NUMBER SEMICOLON
    (10) inst -> . NAME PLUS PLUS SEMICOLON
    (11) inst -> . NAME MINUS EQUAL NUMBER SEMICOLON
    (12) inst -> . NAME MINUS MINUS SEMICOLON
    (15) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (16) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (26) inst -> . IF LPAREN expression RPAREN THEN inst
    (27) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (28) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (29) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (32) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (33) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (34) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (35) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (36) inst -> . NAME LPAREN RPAREN SEMICOLON

    $end            reduce using rule 1 (start -> linst .)
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    inst                           shift and go to state 10

state 3

    (3) linst -> inst .

    NAME            reduce using rule 3 (linst -> inst .)
    PRINT           reduce using rule 3 (linst -> inst .)
    IF              reduce using rule 3 (linst -> inst .)
    WHILE           reduce using rule 3 (linst -> inst .)
    FOR             reduce using rule 3 (linst -> inst .)
    FUNCTION        reduce using rule 3 (linst -> inst .)
    $end            reduce using rule 3 (linst -> inst .)
    END             reduce using rule 3 (linst -> inst .)


state 4

    (7) inst -> NAME . EQUAL expression SEMICOLON
    (9) inst -> NAME . PLUS EQUAL NUMBER SEMICOLON
    (10) inst -> NAME . PLUS PLUS SEMICOLON
    (11) inst -> NAME . MINUS EQUAL NUMBER SEMICOLON
    (12) inst -> NAME . MINUS MINUS SEMICOLON
    (34) inst -> NAME . LPAREN expressions RPAREN SEMICOLON
    (35) inst -> NAME . LPAREN params RPAREN SEMICOLON
    (36) inst -> NAME . LPAREN RPAREN SEMICOLON

    EQUAL           shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13
    LPAREN          shift and go to state 14


state 5

    (15) inst -> PRINT . LPAREN params RPAREN SEMICOLON
    (16) inst -> PRINT . LPAREN expressions RPAREN SEMICOLON

    LPAREN          shift and go to state 15


state 6

    (26) inst -> IF . LPAREN expression RPAREN THEN inst
    (27) inst -> IF . LPAREN expression RPAREN THEN inst ELSE inst

    LPAREN          shift and go to state 16


state 7

    (28) inst -> WHILE . LPAREN expression RPAREN DO linst END SEMICOLON

    LPAREN          shift and go to state 17


state 8

    (29) inst -> FOR . LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON

    LPAREN          shift and go to state 18


state 9

    (32) inst -> FUNCTION . NAME LPAREN params RPAREN linst END SEMICOLON
    (33) inst -> FUNCTION . NAME LPAREN RPAREN linst END SEMICOLON

    NAME            shift and go to state 19


state 10

    (2) linst -> linst inst .

    NAME            reduce using rule 2 (linst -> linst inst .)
    PRINT           reduce using rule 2 (linst -> linst inst .)
    IF              reduce using rule 2 (linst -> linst inst .)
    WHILE           reduce using rule 2 (linst -> linst inst .)
    FOR             reduce using rule 2 (linst -> linst inst .)
    FUNCTION        reduce using rule 2 (linst -> linst inst .)
    $end            reduce using rule 2 (linst -> linst inst .)
    END             reduce using rule 2 (linst -> linst inst .)


state 11

    (7) inst -> NAME EQUAL . expression SEMICOLON
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 21

state 12

    (9) inst -> NAME PLUS . EQUAL NUMBER SEMICOLON
    (10) inst -> NAME PLUS . PLUS SEMICOLON

    EQUAL           shift and go to state 25
    PLUS            shift and go to state 24


state 13

    (11) inst -> NAME MINUS . EQUAL NUMBER SEMICOLON
    (12) inst -> NAME MINUS . MINUS SEMICOLON

    EQUAL           shift and go to state 27
    MINUS           shift and go to state 26


state 14

    (34) inst -> NAME LPAREN . expressions RPAREN SEMICOLON
    (35) inst -> NAME LPAREN . params RPAREN SEMICOLON
    (36) inst -> NAME LPAREN . RPAREN SEMICOLON
    (13) expressions -> . expression COMMA expressions
    (14) expressions -> . expression
    (30) params -> . NAME COMMA params
    (31) params -> . NAME
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    RPAREN          shift and go to state 30
    NAME            shift and go to state 28
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23

    expressions                    shift and go to state 29
    params                         shift and go to state 31
    expression                     shift and go to state 32

state 15

    (15) inst -> PRINT LPAREN . params RPAREN SEMICOLON
    (16) inst -> PRINT LPAREN . expressions RPAREN SEMICOLON
    (30) params -> . NAME COMMA params
    (31) params -> . NAME
    (13) expressions -> . expression COMMA expressions
    (14) expressions -> . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    NAME            shift and go to state 28
    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23

    params                         shift and go to state 33
    expressions                    shift and go to state 34
    expression                     shift and go to state 32

state 16

    (26) inst -> IF LPAREN . expression RPAREN THEN inst
    (27) inst -> IF LPAREN . expression RPAREN THEN inst ELSE inst
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 35

state 17

    (28) inst -> WHILE LPAREN . expression RPAREN DO linst END SEMICOLON
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 36

state 18

    (29) inst -> FOR LPAREN . assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (8) assign -> . NAME EQUAL expression

    NAME            shift and go to state 38

    assign                         shift and go to state 37

state 19

    (32) inst -> FUNCTION NAME . LPAREN params RPAREN linst END SEMICOLON
    (33) inst -> FUNCTION NAME . LPAREN RPAREN linst END SEMICOLON

    LPAREN          shift and go to state 39


state 20

    (6) expression -> NAME .

    SEMICOLON       reduce using rule 6 (expression -> NAME .)
    PLUS            reduce using rule 6 (expression -> NAME .)
    MINUS           reduce using rule 6 (expression -> NAME .)
    TIMES           reduce using rule 6 (expression -> NAME .)
    OR              reduce using rule 6 (expression -> NAME .)
    AND             reduce using rule 6 (expression -> NAME .)
    EQUALS          reduce using rule 6 (expression -> NAME .)
    LOWER           reduce using rule 6 (expression -> NAME .)
    HIGHER          reduce using rule 6 (expression -> NAME .)
    DIVIDE          reduce using rule 6 (expression -> NAME .)
    RPAREN          reduce using rule 6 (expression -> NAME .)
    COMMA           reduce using rule 6 (expression -> NAME .)


state 21

    (7) inst -> NAME EQUAL expression . SEMICOLON
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 40
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49


state 22

    (4) expression -> LPAREN . expression RPAREN
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 50

state 23

    (5) expression -> NUMBER .

    SEMICOLON       reduce using rule 5 (expression -> NUMBER .)
    PLUS            reduce using rule 5 (expression -> NUMBER .)
    MINUS           reduce using rule 5 (expression -> NUMBER .)
    TIMES           reduce using rule 5 (expression -> NUMBER .)
    OR              reduce using rule 5 (expression -> NUMBER .)
    AND             reduce using rule 5 (expression -> NUMBER .)
    EQUALS          reduce using rule 5 (expression -> NUMBER .)
    LOWER           reduce using rule 5 (expression -> NUMBER .)
    HIGHER          reduce using rule 5 (expression -> NUMBER .)
    DIVIDE          reduce using rule 5 (expression -> NUMBER .)
    COMMA           reduce using rule 5 (expression -> NUMBER .)
    RPAREN          reduce using rule 5 (expression -> NUMBER .)


state 24

    (10) inst -> NAME PLUS PLUS . SEMICOLON

    SEMICOLON       shift and go to state 51


state 25

    (9) inst -> NAME PLUS EQUAL . NUMBER SEMICOLON

    NUMBER          shift and go to state 52


state 26

    (12) inst -> NAME MINUS MINUS . SEMICOLON

    SEMICOLON       shift and go to state 53


state 27

    (11) inst -> NAME MINUS EQUAL . NUMBER SEMICOLON

    NUMBER          shift and go to state 54


state 28

    (30) params -> NAME . COMMA params
    (31) params -> NAME .
    (6) expression -> NAME .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 6 (expression -> NAME .)
    COMMA           shift and go to state 55
    PLUS            reduce using rule 6 (expression -> NAME .)
    MINUS           reduce using rule 6 (expression -> NAME .)
    TIMES           reduce using rule 6 (expression -> NAME .)
    OR              reduce using rule 6 (expression -> NAME .)
    AND             reduce using rule 6 (expression -> NAME .)
    EQUALS          reduce using rule 6 (expression -> NAME .)
    LOWER           reduce using rule 6 (expression -> NAME .)
    HIGHER          reduce using rule 6 (expression -> NAME .)
    DIVIDE          reduce using rule 6 (expression -> NAME .)
    RPAREN          reduce using rule 6 (expression -> NAME .)

  ! RPAREN          [ reduce using rule 31 (params -> NAME .) ]
  ! COMMA           [ reduce using rule 6 (expression -> NAME .) ]


state 29

    (34) inst -> NAME LPAREN expressions . RPAREN SEMICOLON

    RPAREN          shift and go to state 56


state 30

    (36) inst -> NAME LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 57


state 31

    (35) inst -> NAME LPAREN params . RPAREN SEMICOLON

    RPAREN          shift and go to state 58


state 32

    (13) expressions -> expression . COMMA expressions
    (14) expressions -> expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

    COMMA           shift and go to state 59
    RPAREN          reduce using rule 14 (expressions -> expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49


state 33

    (15) inst -> PRINT LPAREN params . RPAREN SEMICOLON

    RPAREN          shift and go to state 60


state 34

    (16) inst -> PRINT LPAREN expressions . RPAREN SEMICOLON

    RPAREN          shift and go to state 61


state 35

    (26) inst -> IF LPAREN expression . RPAREN THEN inst
    (27) inst -> IF LPAREN expression . RPAREN THEN inst ELSE inst
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 62
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49


state 36

    (28) inst -> WHILE LPAREN expression . RPAREN DO linst END SEMICOLON
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 63
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49


state 37

    (29) inst -> FOR LPAREN assign . SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON

    SEMICOLON       shift and go to state 64


state 38

    (8) assign -> NAME . EQUAL expression

    EQUAL           shift and go to state 65


state 39

    (32) inst -> FUNCTION NAME LPAREN . params RPAREN linst END SEMICOLON
    (33) inst -> FUNCTION NAME LPAREN . RPAREN linst END SEMICOLON
    (30) params -> . NAME COMMA params
    (31) params -> . NAME

    RPAREN          shift and go to state 68
    NAME            shift and go to state 66

    params                         shift and go to state 67

state 40

    (7) inst -> NAME EQUAL expression SEMICOLON .

    NAME            reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    PRINT           reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    IF              reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    FOR             reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    FUNCTION        reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    $end            reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    END             reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    ELSE            reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)


state 41

    (17) expression -> expression PLUS . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 69

state 42

    (18) expression -> expression MINUS . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 70

state 43

    (19) expression -> expression TIMES . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 71

state 44

    (20) expression -> expression OR . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 72

state 45

    (21) expression -> expression AND . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 73

state 46

    (22) expression -> expression EQUALS . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 74

state 47

    (23) expression -> expression LOWER . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 75

state 48

    (24) expression -> expression HIGHER . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 76

state 49

    (25) expression -> expression DIVIDE . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 77

state 50

    (4) expression -> LPAREN expression . RPAREN
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 78
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49


state 51

    (10) inst -> NAME PLUS PLUS SEMICOLON .

    NAME            reduce using rule 10 (inst -> NAME PLUS PLUS SEMICOLON .)
    PRINT           reduce using rule 10 (inst -> NAME PLUS PLUS SEMICOLON .)
    IF              reduce using rule 10 (inst -> NAME PLUS PLUS SEMICOLON .)
    WHILE           reduce using rule 10 (inst -> NAME PLUS PLUS SEMICOLON .)
    FOR             reduce using rule 10 (inst -> NAME PLUS PLUS SEMICOLON .)
    FUNCTION        reduce using rule 10 (inst -> NAME PLUS PLUS SEMICOLON .)
    $end            reduce using rule 10 (inst -> NAME PLUS PLUS SEMICOLON .)
    END             reduce using rule 10 (inst -> NAME PLUS PLUS SEMICOLON .)
    ELSE            reduce using rule 10 (inst -> NAME PLUS PLUS SEMICOLON .)


state 52

    (9) inst -> NAME PLUS EQUAL NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 79


state 53

    (12) inst -> NAME MINUS MINUS SEMICOLON .

    NAME            reduce using rule 12 (inst -> NAME MINUS MINUS SEMICOLON .)
    PRINT           reduce using rule 12 (inst -> NAME MINUS MINUS SEMICOLON .)
    IF              reduce using rule 12 (inst -> NAME MINUS MINUS SEMICOLON .)
    WHILE           reduce using rule 12 (inst -> NAME MINUS MINUS SEMICOLON .)
    FOR             reduce using rule 12 (inst -> NAME MINUS MINUS SEMICOLON .)
    FUNCTION        reduce using rule 12 (inst -> NAME MINUS MINUS SEMICOLON .)
    $end            reduce using rule 12 (inst -> NAME MINUS MINUS SEMICOLON .)
    END             reduce using rule 12 (inst -> NAME MINUS MINUS SEMICOLON .)
    ELSE            reduce using rule 12 (inst -> NAME MINUS MINUS SEMICOLON .)


state 54

    (11) inst -> NAME MINUS EQUAL NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 80


state 55

    (30) params -> NAME COMMA . params
    (30) params -> . NAME COMMA params
    (31) params -> . NAME

    NAME            shift and go to state 66

    params                         shift and go to state 81

state 56

    (34) inst -> NAME LPAREN expressions RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 82


state 57

    (36) inst -> NAME LPAREN RPAREN SEMICOLON .

    NAME            reduce using rule 36 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 36 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 36 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 36 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 36 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 36 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 36 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 36 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 36 (inst -> NAME LPAREN RPAREN SEMICOLON .)


state 58

    (35) inst -> NAME LPAREN params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 83


state 59

    (13) expressions -> expression COMMA . expressions
    (13) expressions -> . expression COMMA expressions
    (14) expressions -> . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 32
    expressions                    shift and go to state 84

state 60

    (15) inst -> PRINT LPAREN params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 85


state 61

    (16) inst -> PRINT LPAREN expressions RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 86


state 62

    (26) inst -> IF LPAREN expression RPAREN . THEN inst
    (27) inst -> IF LPAREN expression RPAREN . THEN inst ELSE inst

    THEN            shift and go to state 87


state 63

    (28) inst -> WHILE LPAREN expression RPAREN . DO linst END SEMICOLON

    DO              shift and go to state 88


state 64

    (29) inst -> FOR LPAREN assign SEMICOLON . expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 89

state 65

    (8) assign -> NAME EQUAL . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression OR expression
    (21) expression -> . expression AND expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression LOWER expression
    (24) expression -> . expression HIGHER expression
    (25) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 23
    NAME            shift and go to state 20

    expression                     shift and go to state 90

state 66

    (30) params -> NAME . COMMA params
    (31) params -> NAME .

    COMMA           shift and go to state 55
    RPAREN          reduce using rule 31 (params -> NAME .)


state 67

    (32) inst -> FUNCTION NAME LPAREN params . RPAREN linst END SEMICOLON

    RPAREN          shift and go to state 91


state 68

    (33) inst -> FUNCTION NAME LPAREN RPAREN . linst END SEMICOLON
    (2) linst -> . linst inst
    (3) linst -> . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (9) inst -> . NAME PLUS EQUAL NUMBER SEMICOLON
    (10) inst -> . NAME PLUS PLUS SEMICOLON
    (11) inst -> . NAME MINUS EQUAL NUMBER SEMICOLON
    (12) inst -> . NAME MINUS MINUS SEMICOLON
    (15) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (16) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (26) inst -> . IF LPAREN expression RPAREN THEN inst
    (27) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (28) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (29) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (32) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (33) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (34) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (35) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (36) inst -> . NAME LPAREN RPAREN SEMICOLON

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    linst                          shift and go to state 92
    inst                           shift and go to state 3

state 69

    (17) expression -> expression PLUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 17 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 17 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 17 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! EQUALS          [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! LOWER           [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! HIGHER          [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression PLUS expression .) ]


state 70

    (18) expression -> expression MINUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 18 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 18 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 18 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! EQUALS          [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! LOWER           [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! HIGHER          [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression MINUS expression .) ]


state 71

    (19) expression -> expression TIMES expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 19 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 19 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 19 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 19 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 19 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 19 (expression -> expression TIMES expression .) ]
  ! EQUALS          [ reduce using rule 19 (expression -> expression TIMES expression .) ]
  ! LOWER           [ reduce using rule 19 (expression -> expression TIMES expression .) ]
  ! HIGHER          [ reduce using rule 19 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression TIMES expression .) ]


state 72

    (20) expression -> expression OR expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 20 (expression -> expression OR expression .)
    COMMA           reduce using rule 20 (expression -> expression OR expression .)
    RPAREN          reduce using rule 20 (expression -> expression OR expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! LOWER           [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! HIGHER          [ reduce using rule 20 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression OR expression .) ]


state 73

    (21) expression -> expression AND expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 21 (expression -> expression AND expression .)
    COMMA           reduce using rule 21 (expression -> expression AND expression .)
    RPAREN          reduce using rule 21 (expression -> expression AND expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! LOWER           [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! HIGHER          [ reduce using rule 21 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression AND expression .) ]


state 74

    (22) expression -> expression EQUALS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 22 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 22 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 22 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! LOWER           [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! HIGHER          [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression EQUALS expression .) ]


state 75

    (23) expression -> expression LOWER expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 23 (expression -> expression LOWER expression .)
    COMMA           reduce using rule 23 (expression -> expression LOWER expression .)
    RPAREN          reduce using rule 23 (expression -> expression LOWER expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 23 (expression -> expression LOWER expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression LOWER expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression LOWER expression .) ]
  ! OR              [ reduce using rule 23 (expression -> expression LOWER expression .) ]
  ! AND             [ reduce using rule 23 (expression -> expression LOWER expression .) ]
  ! EQUALS          [ reduce using rule 23 (expression -> expression LOWER expression .) ]
  ! LOWER           [ reduce using rule 23 (expression -> expression LOWER expression .) ]
  ! HIGHER          [ reduce using rule 23 (expression -> expression LOWER expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression LOWER expression .) ]


state 76

    (24) expression -> expression HIGHER expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 24 (expression -> expression HIGHER expression .)
    COMMA           reduce using rule 24 (expression -> expression HIGHER expression .)
    RPAREN          reduce using rule 24 (expression -> expression HIGHER expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 24 (expression -> expression HIGHER expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression HIGHER expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression HIGHER expression .) ]
  ! OR              [ reduce using rule 24 (expression -> expression HIGHER expression .) ]
  ! AND             [ reduce using rule 24 (expression -> expression HIGHER expression .) ]
  ! EQUALS          [ reduce using rule 24 (expression -> expression HIGHER expression .) ]
  ! LOWER           [ reduce using rule 24 (expression -> expression HIGHER expression .) ]
  ! HIGHER          [ reduce using rule 24 (expression -> expression HIGHER expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression HIGHER expression .) ]


state 77

    (25) expression -> expression DIVIDE expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 25 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 25 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 25 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49

  ! PLUS            [ reduce using rule 25 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 25 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 25 (expression -> expression DIVIDE expression .) ]
  ! EQUALS          [ reduce using rule 25 (expression -> expression DIVIDE expression .) ]
  ! LOWER           [ reduce using rule 25 (expression -> expression DIVIDE expression .) ]
  ! HIGHER          [ reduce using rule 25 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression DIVIDE expression .) ]


state 78

    (4) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    LOWER           reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    HIGHER          reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 4 (expression -> LPAREN expression RPAREN .)


state 79

    (9) inst -> NAME PLUS EQUAL NUMBER SEMICOLON .

    NAME            reduce using rule 9 (inst -> NAME PLUS EQUAL NUMBER SEMICOLON .)
    PRINT           reduce using rule 9 (inst -> NAME PLUS EQUAL NUMBER SEMICOLON .)
    IF              reduce using rule 9 (inst -> NAME PLUS EQUAL NUMBER SEMICOLON .)
    WHILE           reduce using rule 9 (inst -> NAME PLUS EQUAL NUMBER SEMICOLON .)
    FOR             reduce using rule 9 (inst -> NAME PLUS EQUAL NUMBER SEMICOLON .)
    FUNCTION        reduce using rule 9 (inst -> NAME PLUS EQUAL NUMBER SEMICOLON .)
    $end            reduce using rule 9 (inst -> NAME PLUS EQUAL NUMBER SEMICOLON .)
    END             reduce using rule 9 (inst -> NAME PLUS EQUAL NUMBER SEMICOLON .)
    ELSE            reduce using rule 9 (inst -> NAME PLUS EQUAL NUMBER SEMICOLON .)


state 80

    (11) inst -> NAME MINUS EQUAL NUMBER SEMICOLON .

    NAME            reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER SEMICOLON .)
    PRINT           reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER SEMICOLON .)
    IF              reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER SEMICOLON .)
    WHILE           reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER SEMICOLON .)
    FOR             reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER SEMICOLON .)
    FUNCTION        reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER SEMICOLON .)
    $end            reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER SEMICOLON .)
    END             reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER SEMICOLON .)
    ELSE            reduce using rule 11 (inst -> NAME MINUS EQUAL NUMBER SEMICOLON .)


state 81

    (30) params -> NAME COMMA params .

    RPAREN          reduce using rule 30 (params -> NAME COMMA params .)


state 82

    (34) inst -> NAME LPAREN expressions RPAREN SEMICOLON .

    NAME            reduce using rule 34 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    PRINT           reduce using rule 34 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    IF              reduce using rule 34 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    WHILE           reduce using rule 34 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    FOR             reduce using rule 34 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 34 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    $end            reduce using rule 34 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    END             reduce using rule 34 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    ELSE            reduce using rule 34 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)


state 83

    (35) inst -> NAME LPAREN params RPAREN SEMICOLON .

    NAME            reduce using rule 35 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    PRINT           reduce using rule 35 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 35 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 35 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 35 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 35 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 35 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    END             reduce using rule 35 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 35 (inst -> NAME LPAREN params RPAREN SEMICOLON .)


state 84

    (13) expressions -> expression COMMA expressions .

    RPAREN          reduce using rule 13 (expressions -> expression COMMA expressions .)


state 85

    (15) inst -> PRINT LPAREN params RPAREN SEMICOLON .

    NAME            reduce using rule 15 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    PRINT           reduce using rule 15 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 15 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 15 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 15 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 15 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 15 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    END             reduce using rule 15 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 15 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)


state 86

    (16) inst -> PRINT LPAREN expressions RPAREN SEMICOLON .

    NAME            reduce using rule 16 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    PRINT           reduce using rule 16 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    IF              reduce using rule 16 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    WHILE           reduce using rule 16 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    FOR             reduce using rule 16 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 16 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    $end            reduce using rule 16 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    END             reduce using rule 16 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    ELSE            reduce using rule 16 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)


state 87

    (26) inst -> IF LPAREN expression RPAREN THEN . inst
    (27) inst -> IF LPAREN expression RPAREN THEN . inst ELSE inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (9) inst -> . NAME PLUS EQUAL NUMBER SEMICOLON
    (10) inst -> . NAME PLUS PLUS SEMICOLON
    (11) inst -> . NAME MINUS EQUAL NUMBER SEMICOLON
    (12) inst -> . NAME MINUS MINUS SEMICOLON
    (15) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (16) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (26) inst -> . IF LPAREN expression RPAREN THEN inst
    (27) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (28) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (29) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (32) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (33) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (34) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (35) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (36) inst -> . NAME LPAREN RPAREN SEMICOLON

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    inst                           shift and go to state 93

state 88

    (28) inst -> WHILE LPAREN expression RPAREN DO . linst END SEMICOLON
    (2) linst -> . linst inst
    (3) linst -> . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (9) inst -> . NAME PLUS EQUAL NUMBER SEMICOLON
    (10) inst -> . NAME PLUS PLUS SEMICOLON
    (11) inst -> . NAME MINUS EQUAL NUMBER SEMICOLON
    (12) inst -> . NAME MINUS MINUS SEMICOLON
    (15) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (16) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (26) inst -> . IF LPAREN expression RPAREN THEN inst
    (27) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (28) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (29) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (32) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (33) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (34) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (35) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (36) inst -> . NAME LPAREN RPAREN SEMICOLON

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    linst                          shift and go to state 94
    inst                           shift and go to state 3

state 89

    (29) inst -> FOR LPAREN assign SEMICOLON expression . SEMICOLON assign RPAREN DO linst END SEMICOLON
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 95
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49


state 90

    (8) assign -> NAME EQUAL expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . OR expression
    (21) expression -> expression . AND expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . LOWER expression
    (24) expression -> expression . HIGHER expression
    (25) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 8 (assign -> NAME EQUAL expression .)
    RPAREN          reduce using rule 8 (assign -> NAME EQUAL expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQUALS          shift and go to state 46
    LOWER           shift and go to state 47
    HIGHER          shift and go to state 48
    DIVIDE          shift and go to state 49


state 91

    (32) inst -> FUNCTION NAME LPAREN params RPAREN . linst END SEMICOLON
    (2) linst -> . linst inst
    (3) linst -> . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (9) inst -> . NAME PLUS EQUAL NUMBER SEMICOLON
    (10) inst -> . NAME PLUS PLUS SEMICOLON
    (11) inst -> . NAME MINUS EQUAL NUMBER SEMICOLON
    (12) inst -> . NAME MINUS MINUS SEMICOLON
    (15) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (16) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (26) inst -> . IF LPAREN expression RPAREN THEN inst
    (27) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (28) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (29) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (32) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (33) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (34) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (35) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (36) inst -> . NAME LPAREN RPAREN SEMICOLON

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    linst                          shift and go to state 96
    inst                           shift and go to state 3

state 92

    (33) inst -> FUNCTION NAME LPAREN RPAREN linst . END SEMICOLON
    (2) linst -> linst . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (9) inst -> . NAME PLUS EQUAL NUMBER SEMICOLON
    (10) inst -> . NAME PLUS PLUS SEMICOLON
    (11) inst -> . NAME MINUS EQUAL NUMBER SEMICOLON
    (12) inst -> . NAME MINUS MINUS SEMICOLON
    (15) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (16) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (26) inst -> . IF LPAREN expression RPAREN THEN inst
    (27) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (28) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (29) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (32) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (33) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (34) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (35) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (36) inst -> . NAME LPAREN RPAREN SEMICOLON

    END             shift and go to state 97
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    inst                           shift and go to state 10

state 93

    (26) inst -> IF LPAREN expression RPAREN THEN inst .
    (27) inst -> IF LPAREN expression RPAREN THEN inst . ELSE inst

  ! shift/reduce conflict for ELSE resolved as shift
    NAME            reduce using rule 26 (inst -> IF LPAREN expression RPAREN THEN inst .)
    PRINT           reduce using rule 26 (inst -> IF LPAREN expression RPAREN THEN inst .)
    IF              reduce using rule 26 (inst -> IF LPAREN expression RPAREN THEN inst .)
    WHILE           reduce using rule 26 (inst -> IF LPAREN expression RPAREN THEN inst .)
    FOR             reduce using rule 26 (inst -> IF LPAREN expression RPAREN THEN inst .)
    FUNCTION        reduce using rule 26 (inst -> IF LPAREN expression RPAREN THEN inst .)
    $end            reduce using rule 26 (inst -> IF LPAREN expression RPAREN THEN inst .)
    END             reduce using rule 26 (inst -> IF LPAREN expression RPAREN THEN inst .)
    ELSE            shift and go to state 98

  ! ELSE            [ reduce using rule 26 (inst -> IF LPAREN expression RPAREN THEN inst .) ]


state 94

    (28) inst -> WHILE LPAREN expression RPAREN DO linst . END SEMICOLON
    (2) linst -> linst . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (9) inst -> . NAME PLUS EQUAL NUMBER SEMICOLON
    (10) inst -> . NAME PLUS PLUS SEMICOLON
    (11) inst -> . NAME MINUS EQUAL NUMBER SEMICOLON
    (12) inst -> . NAME MINUS MINUS SEMICOLON
    (15) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (16) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (26) inst -> . IF LPAREN expression RPAREN THEN inst
    (27) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (28) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (29) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (32) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (33) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (34) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (35) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (36) inst -> . NAME LPAREN RPAREN SEMICOLON

    END             shift and go to state 99
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    inst                           shift and go to state 10

state 95

    (29) inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON . assign RPAREN DO linst END SEMICOLON
    (8) assign -> . NAME EQUAL expression

    NAME            shift and go to state 38

    assign                         shift and go to state 100

state 96

    (32) inst -> FUNCTION NAME LPAREN params RPAREN linst . END SEMICOLON
    (2) linst -> linst . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (9) inst -> . NAME PLUS EQUAL NUMBER SEMICOLON
    (10) inst -> . NAME PLUS PLUS SEMICOLON
    (11) inst -> . NAME MINUS EQUAL NUMBER SEMICOLON
    (12) inst -> . NAME MINUS MINUS SEMICOLON
    (15) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (16) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (26) inst -> . IF LPAREN expression RPAREN THEN inst
    (27) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (28) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (29) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (32) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (33) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (34) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (35) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (36) inst -> . NAME LPAREN RPAREN SEMICOLON

    END             shift and go to state 101
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    inst                           shift and go to state 10

state 97

    (33) inst -> FUNCTION NAME LPAREN RPAREN linst END . SEMICOLON

    SEMICOLON       shift and go to state 102


state 98

    (27) inst -> IF LPAREN expression RPAREN THEN inst ELSE . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (9) inst -> . NAME PLUS EQUAL NUMBER SEMICOLON
    (10) inst -> . NAME PLUS PLUS SEMICOLON
    (11) inst -> . NAME MINUS EQUAL NUMBER SEMICOLON
    (12) inst -> . NAME MINUS MINUS SEMICOLON
    (15) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (16) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (26) inst -> . IF LPAREN expression RPAREN THEN inst
    (27) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (28) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (29) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (32) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (33) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (34) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (35) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (36) inst -> . NAME LPAREN RPAREN SEMICOLON

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    inst                           shift and go to state 103

state 99

    (28) inst -> WHILE LPAREN expression RPAREN DO linst END . SEMICOLON

    SEMICOLON       shift and go to state 104


state 100

    (29) inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign . RPAREN DO linst END SEMICOLON

    RPAREN          shift and go to state 105


state 101

    (32) inst -> FUNCTION NAME LPAREN params RPAREN linst END . SEMICOLON

    SEMICOLON       shift and go to state 106


state 102

    (33) inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .

    NAME            reduce using rule 33 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    PRINT           reduce using rule 33 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    IF              reduce using rule 33 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    WHILE           reduce using rule 33 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    FOR             reduce using rule 33 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    FUNCTION        reduce using rule 33 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    $end            reduce using rule 33 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    END             reduce using rule 33 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    ELSE            reduce using rule 33 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)


state 103

    (27) inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .

    NAME            reduce using rule 27 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    PRINT           reduce using rule 27 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    IF              reduce using rule 27 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    WHILE           reduce using rule 27 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    FOR             reduce using rule 27 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    FUNCTION        reduce using rule 27 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    $end            reduce using rule 27 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    END             reduce using rule 27 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    ELSE            reduce using rule 27 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)


state 104

    (28) inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .

    NAME            reduce using rule 28 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    PRINT           reduce using rule 28 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    IF              reduce using rule 28 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    WHILE           reduce using rule 28 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    FOR             reduce using rule 28 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    FUNCTION        reduce using rule 28 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    $end            reduce using rule 28 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    END             reduce using rule 28 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    ELSE            reduce using rule 28 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)


state 105

    (29) inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN . DO linst END SEMICOLON

    DO              shift and go to state 107


state 106

    (32) inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .

    NAME            reduce using rule 32 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    PRINT           reduce using rule 32 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    IF              reduce using rule 32 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    WHILE           reduce using rule 32 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    FOR             reduce using rule 32 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    FUNCTION        reduce using rule 32 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    $end            reduce using rule 32 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    END             reduce using rule 32 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    ELSE            reduce using rule 32 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)


state 107

    (29) inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO . linst END SEMICOLON
    (2) linst -> . linst inst
    (3) linst -> . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (9) inst -> . NAME PLUS EQUAL NUMBER SEMICOLON
    (10) inst -> . NAME PLUS PLUS SEMICOLON
    (11) inst -> . NAME MINUS EQUAL NUMBER SEMICOLON
    (12) inst -> . NAME MINUS MINUS SEMICOLON
    (15) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (16) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (26) inst -> . IF LPAREN expression RPAREN THEN inst
    (27) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (28) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (29) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (32) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (33) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (34) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (35) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (36) inst -> . NAME LPAREN RPAREN SEMICOLON

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    linst                          shift and go to state 108
    inst                           shift and go to state 3

state 108

    (29) inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst . END SEMICOLON
    (2) linst -> linst . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (9) inst -> . NAME PLUS EQUAL NUMBER SEMICOLON
    (10) inst -> . NAME PLUS PLUS SEMICOLON
    (11) inst -> . NAME MINUS EQUAL NUMBER SEMICOLON
    (12) inst -> . NAME MINUS MINUS SEMICOLON
    (15) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (16) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (26) inst -> . IF LPAREN expression RPAREN THEN inst
    (27) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (28) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (29) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (32) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (33) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (34) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (35) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (36) inst -> . NAME LPAREN RPAREN SEMICOLON

    END             shift and go to state 109
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    inst                           shift and go to state 10

state 109

    (29) inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END . SEMICOLON

    SEMICOLON       shift and go to state 110


state 110

    (29) inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .

    NAME            reduce using rule 29 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    PRINT           reduce using rule 29 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    IF              reduce using rule 29 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    WHILE           reduce using rule 29 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    FOR             reduce using rule 29 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    FUNCTION        reduce using rule 29 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    $end            reduce using rule 29 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    END             reduce using rule 29 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    ELSE            reduce using rule 29 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 28 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 69 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 69 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 70 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 70 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 71 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 71 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 72 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 72 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 73 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 73 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 74 resolved as shift
WARNING: shift/reduce conflict for OR in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 74 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 74 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 74 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 75 resolved as shift
WARNING: shift/reduce conflict for OR in state 75 resolved as shift
WARNING: shift/reduce conflict for AND in state 75 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 75 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 75 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 75 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for OR in state 76 resolved as shift
WARNING: shift/reduce conflict for AND in state 76 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 76 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 76 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 77 resolved as shift
WARNING: shift/reduce conflict for OR in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 77 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 77 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 77 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 77 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 93 resolved as shift
WARNING: reduce/reduce conflict in state 28 resolved using rule (expression -> NAME)
WARNING: rejected rule (params -> NAME) in state 28
