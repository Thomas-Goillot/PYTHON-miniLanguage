Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> linst
Rule 2     linst -> linst inst
Rule 3     linst -> inst
Rule 4     expression -> LPAREN expression RPAREN
Rule 5     expression -> NUMBER
Rule 6     expression -> NAME
Rule 7     inst -> NAME EQUAL expression SEMICOLON
Rule 8     assign -> NAME EQUAL expression
Rule 9     expressions -> expression COMMA expressions
Rule 10    expressions -> expression
Rule 11    inst -> PRINT LPAREN params RPAREN SEMICOLON
Rule 12    inst -> PRINT LPAREN expressions RPAREN SEMICOLON
Rule 13    expression -> expression PLUS expression
Rule 14    expression -> expression MINUS expression
Rule 15    expression -> expression TIMES expression
Rule 16    expression -> expression OR expression
Rule 17    expression -> expression AND expression
Rule 18    expression -> expression EQUALS expression
Rule 19    expression -> expression LOWER expression
Rule 20    expression -> expression HIGHER expression
Rule 21    expression -> expression DIVIDE expression
Rule 22    inst -> IF LPAREN expression RPAREN THEN inst
Rule 23    inst -> IF LPAREN expression RPAREN THEN inst ELSE inst
Rule 24    inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON
Rule 25    inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
Rule 26    params -> NAME COMMA params
Rule 27    params -> NAME
Rule 28    inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
Rule 29    inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
Rule 30    inst -> NAME LPAREN expressions RPAREN SEMICOLON
Rule 31    inst -> NAME LPAREN params RPAREN SEMICOLON
Rule 32    inst -> NAME LPAREN RPAREN SEMICOLON

Terminals, with rules where they appear

AND                  : 17
COMMA                : 9 26
DIVIDE               : 21
DO                   : 24 25
ELSE                 : 23
END                  : 24 25 28 29
EQUAL                : 7 8
EQUALS               : 18
FOR                  : 25
FUNCTION             : 28 29
HIGHER               : 20
IF                   : 22 23
LOWER                : 19
LPAREN               : 4 11 12 22 23 24 25 28 29 30 31 32
MINUS                : 14
NAME                 : 6 7 8 26 27 28 29 30 31 32
NUMBER               : 5
OR                   : 16
PLUS                 : 13
PRINT                : 11 12
RPAREN               : 4 11 12 22 23 24 25 28 29 30 31 32
SEMICOLON            : 7 11 12 24 25 25 25 28 29 30 31 32
THEN                 : 22 23
TIMES                : 15
WHILE                : 24
error                : 

Nonterminals, with rules where they appear

assign               : 25 25
expression           : 4 7 8 9 10 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 23 24 25
expressions          : 9 12 30
inst                 : 2 3 22 23 23
linst                : 1 2 24 25 28 29
params               : 11 26 28 31
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . linst
    (2) linst -> . linst inst
    (3) linst -> . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (11) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (12) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (22) inst -> . IF LPAREN expression RPAREN THEN inst
    (23) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (24) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (25) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (28) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (29) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (30) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (31) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (32) inst -> . NAME LPAREN RPAREN SEMICOLON

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    start                          shift and go to state 1
    linst                          shift and go to state 2
    inst                           shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> linst .
    (2) linst -> linst . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (11) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (12) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (22) inst -> . IF LPAREN expression RPAREN THEN inst
    (23) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (24) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (25) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (28) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (29) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (30) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (31) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (32) inst -> . NAME LPAREN RPAREN SEMICOLON

    $end            reduce using rule 1 (start -> linst .)
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    inst                           shift and go to state 10

state 3

    (3) linst -> inst .

    NAME            reduce using rule 3 (linst -> inst .)
    PRINT           reduce using rule 3 (linst -> inst .)
    IF              reduce using rule 3 (linst -> inst .)
    WHILE           reduce using rule 3 (linst -> inst .)
    FOR             reduce using rule 3 (linst -> inst .)
    FUNCTION        reduce using rule 3 (linst -> inst .)
    $end            reduce using rule 3 (linst -> inst .)
    END             reduce using rule 3 (linst -> inst .)


state 4

    (7) inst -> NAME . EQUAL expression SEMICOLON
    (30) inst -> NAME . LPAREN expressions RPAREN SEMICOLON
    (31) inst -> NAME . LPAREN params RPAREN SEMICOLON
    (32) inst -> NAME . LPAREN RPAREN SEMICOLON

    EQUAL           shift and go to state 11
    LPAREN          shift and go to state 12


state 5

    (11) inst -> PRINT . LPAREN params RPAREN SEMICOLON
    (12) inst -> PRINT . LPAREN expressions RPAREN SEMICOLON

    LPAREN          shift and go to state 13


state 6

    (22) inst -> IF . LPAREN expression RPAREN THEN inst
    (23) inst -> IF . LPAREN expression RPAREN THEN inst ELSE inst

    LPAREN          shift and go to state 14


state 7

    (24) inst -> WHILE . LPAREN expression RPAREN DO linst END SEMICOLON

    LPAREN          shift and go to state 15


state 8

    (25) inst -> FOR . LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON

    LPAREN          shift and go to state 16


state 9

    (28) inst -> FUNCTION . NAME LPAREN params RPAREN linst END SEMICOLON
    (29) inst -> FUNCTION . NAME LPAREN RPAREN linst END SEMICOLON

    NAME            shift and go to state 17


state 10

    (2) linst -> linst inst .

    NAME            reduce using rule 2 (linst -> linst inst .)
    PRINT           reduce using rule 2 (linst -> linst inst .)
    IF              reduce using rule 2 (linst -> linst inst .)
    WHILE           reduce using rule 2 (linst -> linst inst .)
    FOR             reduce using rule 2 (linst -> linst inst .)
    FUNCTION        reduce using rule 2 (linst -> linst inst .)
    $end            reduce using rule 2 (linst -> linst inst .)
    END             reduce using rule 2 (linst -> linst inst .)


state 11

    (7) inst -> NAME EQUAL . expression SEMICOLON
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 19

state 12

    (30) inst -> NAME LPAREN . expressions RPAREN SEMICOLON
    (31) inst -> NAME LPAREN . params RPAREN SEMICOLON
    (32) inst -> NAME LPAREN . RPAREN SEMICOLON
    (9) expressions -> . expression COMMA expressions
    (10) expressions -> . expression
    (26) params -> . NAME COMMA params
    (27) params -> . NAME
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    RPAREN          shift and go to state 24
    NAME            shift and go to state 22
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21

    expressions                    shift and go to state 23
    params                         shift and go to state 25
    expression                     shift and go to state 26

state 13

    (11) inst -> PRINT LPAREN . params RPAREN SEMICOLON
    (12) inst -> PRINT LPAREN . expressions RPAREN SEMICOLON
    (26) params -> . NAME COMMA params
    (27) params -> . NAME
    (9) expressions -> . expression COMMA expressions
    (10) expressions -> . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    NAME            shift and go to state 22
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21

    params                         shift and go to state 27
    expressions                    shift and go to state 28
    expression                     shift and go to state 26

state 14

    (22) inst -> IF LPAREN . expression RPAREN THEN inst
    (23) inst -> IF LPAREN . expression RPAREN THEN inst ELSE inst
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 29

state 15

    (24) inst -> WHILE LPAREN . expression RPAREN DO linst END SEMICOLON
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 30

state 16

    (25) inst -> FOR LPAREN . assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (8) assign -> . NAME EQUAL expression

    NAME            shift and go to state 32

    assign                         shift and go to state 31

state 17

    (28) inst -> FUNCTION NAME . LPAREN params RPAREN linst END SEMICOLON
    (29) inst -> FUNCTION NAME . LPAREN RPAREN linst END SEMICOLON

    LPAREN          shift and go to state 33


state 18

    (6) expression -> NAME .

    SEMICOLON       reduce using rule 6 (expression -> NAME .)
    PLUS            reduce using rule 6 (expression -> NAME .)
    MINUS           reduce using rule 6 (expression -> NAME .)
    TIMES           reduce using rule 6 (expression -> NAME .)
    OR              reduce using rule 6 (expression -> NAME .)
    AND             reduce using rule 6 (expression -> NAME .)
    EQUALS          reduce using rule 6 (expression -> NAME .)
    LOWER           reduce using rule 6 (expression -> NAME .)
    HIGHER          reduce using rule 6 (expression -> NAME .)
    DIVIDE          reduce using rule 6 (expression -> NAME .)
    RPAREN          reduce using rule 6 (expression -> NAME .)
    COMMA           reduce using rule 6 (expression -> NAME .)


state 19

    (7) inst -> NAME EQUAL expression . SEMICOLON
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 34
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43


state 20

    (4) expression -> LPAREN . expression RPAREN
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 44

state 21

    (5) expression -> NUMBER .

    SEMICOLON       reduce using rule 5 (expression -> NUMBER .)
    PLUS            reduce using rule 5 (expression -> NUMBER .)
    MINUS           reduce using rule 5 (expression -> NUMBER .)
    TIMES           reduce using rule 5 (expression -> NUMBER .)
    OR              reduce using rule 5 (expression -> NUMBER .)
    AND             reduce using rule 5 (expression -> NUMBER .)
    EQUALS          reduce using rule 5 (expression -> NUMBER .)
    LOWER           reduce using rule 5 (expression -> NUMBER .)
    HIGHER          reduce using rule 5 (expression -> NUMBER .)
    DIVIDE          reduce using rule 5 (expression -> NUMBER .)
    COMMA           reduce using rule 5 (expression -> NUMBER .)
    RPAREN          reduce using rule 5 (expression -> NUMBER .)


state 22

    (26) params -> NAME . COMMA params
    (27) params -> NAME .
    (6) expression -> NAME .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 6 (expression -> NAME .)
    COMMA           shift and go to state 45
    PLUS            reduce using rule 6 (expression -> NAME .)
    MINUS           reduce using rule 6 (expression -> NAME .)
    TIMES           reduce using rule 6 (expression -> NAME .)
    OR              reduce using rule 6 (expression -> NAME .)
    AND             reduce using rule 6 (expression -> NAME .)
    EQUALS          reduce using rule 6 (expression -> NAME .)
    LOWER           reduce using rule 6 (expression -> NAME .)
    HIGHER          reduce using rule 6 (expression -> NAME .)
    DIVIDE          reduce using rule 6 (expression -> NAME .)
    RPAREN          reduce using rule 6 (expression -> NAME .)

  ! RPAREN          [ reduce using rule 27 (params -> NAME .) ]
  ! COMMA           [ reduce using rule 6 (expression -> NAME .) ]


state 23

    (30) inst -> NAME LPAREN expressions . RPAREN SEMICOLON

    RPAREN          shift and go to state 46


state 24

    (32) inst -> NAME LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 47


state 25

    (31) inst -> NAME LPAREN params . RPAREN SEMICOLON

    RPAREN          shift and go to state 48


state 26

    (9) expressions -> expression . COMMA expressions
    (10) expressions -> expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

    COMMA           shift and go to state 49
    RPAREN          reduce using rule 10 (expressions -> expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43


state 27

    (11) inst -> PRINT LPAREN params . RPAREN SEMICOLON

    RPAREN          shift and go to state 50


state 28

    (12) inst -> PRINT LPAREN expressions . RPAREN SEMICOLON

    RPAREN          shift and go to state 51


state 29

    (22) inst -> IF LPAREN expression . RPAREN THEN inst
    (23) inst -> IF LPAREN expression . RPAREN THEN inst ELSE inst
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 52
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43


state 30

    (24) inst -> WHILE LPAREN expression . RPAREN DO linst END SEMICOLON
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 53
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43


state 31

    (25) inst -> FOR LPAREN assign . SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON

    SEMICOLON       shift and go to state 54


state 32

    (8) assign -> NAME . EQUAL expression

    EQUAL           shift and go to state 55


state 33

    (28) inst -> FUNCTION NAME LPAREN . params RPAREN linst END SEMICOLON
    (29) inst -> FUNCTION NAME LPAREN . RPAREN linst END SEMICOLON
    (26) params -> . NAME COMMA params
    (27) params -> . NAME

    RPAREN          shift and go to state 58
    NAME            shift and go to state 56

    params                         shift and go to state 57

state 34

    (7) inst -> NAME EQUAL expression SEMICOLON .

    NAME            reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    PRINT           reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    IF              reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    FOR             reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    FUNCTION        reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    $end            reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    END             reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)
    ELSE            reduce using rule 7 (inst -> NAME EQUAL expression SEMICOLON .)


state 35

    (13) expression -> expression PLUS . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 59

state 36

    (14) expression -> expression MINUS . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 60

state 37

    (15) expression -> expression TIMES . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 61

state 38

    (16) expression -> expression OR . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 62

state 39

    (17) expression -> expression AND . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 63

state 40

    (18) expression -> expression EQUALS . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 64

state 41

    (19) expression -> expression LOWER . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 65

state 42

    (20) expression -> expression HIGHER . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 66

state 43

    (21) expression -> expression DIVIDE . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 67

state 44

    (4) expression -> LPAREN expression . RPAREN
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 68
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43


state 45

    (26) params -> NAME COMMA . params
    (26) params -> . NAME COMMA params
    (27) params -> . NAME

    NAME            shift and go to state 56

    params                         shift and go to state 69

state 46

    (30) inst -> NAME LPAREN expressions RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 70


state 47

    (32) inst -> NAME LPAREN RPAREN SEMICOLON .

    NAME            reduce using rule 32 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 32 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 32 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 32 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 32 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 32 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    $end            reduce using rule 32 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    END             reduce using rule 32 (inst -> NAME LPAREN RPAREN SEMICOLON .)
    ELSE            reduce using rule 32 (inst -> NAME LPAREN RPAREN SEMICOLON .)


state 48

    (31) inst -> NAME LPAREN params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 71


state 49

    (9) expressions -> expression COMMA . expressions
    (9) expressions -> . expression COMMA expressions
    (10) expressions -> . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 26
    expressions                    shift and go to state 72

state 50

    (11) inst -> PRINT LPAREN params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 73


state 51

    (12) inst -> PRINT LPAREN expressions RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 74


state 52

    (22) inst -> IF LPAREN expression RPAREN . THEN inst
    (23) inst -> IF LPAREN expression RPAREN . THEN inst ELSE inst

    THEN            shift and go to state 75


state 53

    (24) inst -> WHILE LPAREN expression RPAREN . DO linst END SEMICOLON

    DO              shift and go to state 76


state 54

    (25) inst -> FOR LPAREN assign SEMICOLON . expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 77

state 55

    (8) assign -> NAME EQUAL . expression
    (4) expression -> . LPAREN expression RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . NAME
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression AND expression
    (18) expression -> . expression EQUALS expression
    (19) expression -> . expression LOWER expression
    (20) expression -> . expression HIGHER expression
    (21) expression -> . expression DIVIDE expression

    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    NAME            shift and go to state 18

    expression                     shift and go to state 78

state 56

    (26) params -> NAME . COMMA params
    (27) params -> NAME .

    COMMA           shift and go to state 45
    RPAREN          reduce using rule 27 (params -> NAME .)


state 57

    (28) inst -> FUNCTION NAME LPAREN params . RPAREN linst END SEMICOLON

    RPAREN          shift and go to state 79


state 58

    (29) inst -> FUNCTION NAME LPAREN RPAREN . linst END SEMICOLON
    (2) linst -> . linst inst
    (3) linst -> . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (11) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (12) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (22) inst -> . IF LPAREN expression RPAREN THEN inst
    (23) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (24) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (25) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (28) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (29) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (30) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (31) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (32) inst -> . NAME LPAREN RPAREN SEMICOLON

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    linst                          shift and go to state 80
    inst                           shift and go to state 3

state 59

    (13) expression -> expression PLUS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 13 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 13 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 13 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43

  ! PLUS            [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! EQUALS          [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! LOWER           [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! HIGHER          [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression PLUS expression .) ]


state 60

    (14) expression -> expression MINUS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 14 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 14 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 14 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43

  ! PLUS            [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! EQUALS          [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! LOWER           [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! HIGHER          [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression MINUS expression .) ]


state 61

    (15) expression -> expression TIMES expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 15 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 15 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 15 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43

  ! PLUS            [ reduce using rule 15 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 15 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 15 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 15 (expression -> expression TIMES expression .) ]
  ! EQUALS          [ reduce using rule 15 (expression -> expression TIMES expression .) ]
  ! LOWER           [ reduce using rule 15 (expression -> expression TIMES expression .) ]
  ! HIGHER          [ reduce using rule 15 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression TIMES expression .) ]


state 62

    (16) expression -> expression OR expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 16 (expression -> expression OR expression .)
    COMMA           reduce using rule 16 (expression -> expression OR expression .)
    RPAREN          reduce using rule 16 (expression -> expression OR expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43

  ! PLUS            [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! LOWER           [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! HIGHER          [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression OR expression .) ]


state 63

    (17) expression -> expression AND expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 17 (expression -> expression AND expression .)
    COMMA           reduce using rule 17 (expression -> expression AND expression .)
    RPAREN          reduce using rule 17 (expression -> expression AND expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43

  ! PLUS            [ reduce using rule 17 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 17 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 17 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 17 (expression -> expression AND expression .) ]
  ! LOWER           [ reduce using rule 17 (expression -> expression AND expression .) ]
  ! HIGHER          [ reduce using rule 17 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression AND expression .) ]


state 64

    (18) expression -> expression EQUALS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 18 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 18 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 18 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43

  ! PLUS            [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! LOWER           [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! HIGHER          [ reduce using rule 18 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression EQUALS expression .) ]


state 65

    (19) expression -> expression LOWER expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 19 (expression -> expression LOWER expression .)
    COMMA           reduce using rule 19 (expression -> expression LOWER expression .)
    RPAREN          reduce using rule 19 (expression -> expression LOWER expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43

  ! PLUS            [ reduce using rule 19 (expression -> expression LOWER expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression LOWER expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression LOWER expression .) ]
  ! OR              [ reduce using rule 19 (expression -> expression LOWER expression .) ]
  ! AND             [ reduce using rule 19 (expression -> expression LOWER expression .) ]
  ! EQUALS          [ reduce using rule 19 (expression -> expression LOWER expression .) ]
  ! LOWER           [ reduce using rule 19 (expression -> expression LOWER expression .) ]
  ! HIGHER          [ reduce using rule 19 (expression -> expression LOWER expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression LOWER expression .) ]


state 66

    (20) expression -> expression HIGHER expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 20 (expression -> expression HIGHER expression .)
    COMMA           reduce using rule 20 (expression -> expression HIGHER expression .)
    RPAREN          reduce using rule 20 (expression -> expression HIGHER expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43

  ! PLUS            [ reduce using rule 20 (expression -> expression HIGHER expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression HIGHER expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression HIGHER expression .) ]
  ! OR              [ reduce using rule 20 (expression -> expression HIGHER expression .) ]
  ! AND             [ reduce using rule 20 (expression -> expression HIGHER expression .) ]
  ! EQUALS          [ reduce using rule 20 (expression -> expression HIGHER expression .) ]
  ! LOWER           [ reduce using rule 20 (expression -> expression HIGHER expression .) ]
  ! HIGHER          [ reduce using rule 20 (expression -> expression HIGHER expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression HIGHER expression .) ]


state 67

    (21) expression -> expression DIVIDE expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 21 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 21 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 21 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43

  ! PLUS            [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! EQUALS          [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! LOWER           [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! HIGHER          [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]


state 68

    (4) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    LOWER           reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    HIGHER          reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 4 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 4 (expression -> LPAREN expression RPAREN .)


state 69

    (26) params -> NAME COMMA params .

    RPAREN          reduce using rule 26 (params -> NAME COMMA params .)


state 70

    (30) inst -> NAME LPAREN expressions RPAREN SEMICOLON .

    NAME            reduce using rule 30 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    PRINT           reduce using rule 30 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    IF              reduce using rule 30 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    WHILE           reduce using rule 30 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    FOR             reduce using rule 30 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 30 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    $end            reduce using rule 30 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    END             reduce using rule 30 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)
    ELSE            reduce using rule 30 (inst -> NAME LPAREN expressions RPAREN SEMICOLON .)


state 71

    (31) inst -> NAME LPAREN params RPAREN SEMICOLON .

    NAME            reduce using rule 31 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    PRINT           reduce using rule 31 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 31 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 31 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 31 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 31 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 31 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    END             reduce using rule 31 (inst -> NAME LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 31 (inst -> NAME LPAREN params RPAREN SEMICOLON .)


state 72

    (9) expressions -> expression COMMA expressions .

    RPAREN          reduce using rule 9 (expressions -> expression COMMA expressions .)


state 73

    (11) inst -> PRINT LPAREN params RPAREN SEMICOLON .

    NAME            reduce using rule 11 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    PRINT           reduce using rule 11 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    IF              reduce using rule 11 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    WHILE           reduce using rule 11 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    FOR             reduce using rule 11 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 11 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    $end            reduce using rule 11 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    END             reduce using rule 11 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)
    ELSE            reduce using rule 11 (inst -> PRINT LPAREN params RPAREN SEMICOLON .)


state 74

    (12) inst -> PRINT LPAREN expressions RPAREN SEMICOLON .

    NAME            reduce using rule 12 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    PRINT           reduce using rule 12 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    IF              reduce using rule 12 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    WHILE           reduce using rule 12 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    FOR             reduce using rule 12 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 12 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    $end            reduce using rule 12 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    END             reduce using rule 12 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)
    ELSE            reduce using rule 12 (inst -> PRINT LPAREN expressions RPAREN SEMICOLON .)


state 75

    (22) inst -> IF LPAREN expression RPAREN THEN . inst
    (23) inst -> IF LPAREN expression RPAREN THEN . inst ELSE inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (11) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (12) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (22) inst -> . IF LPAREN expression RPAREN THEN inst
    (23) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (24) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (25) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (28) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (29) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (30) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (31) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (32) inst -> . NAME LPAREN RPAREN SEMICOLON

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    inst                           shift and go to state 81

state 76

    (24) inst -> WHILE LPAREN expression RPAREN DO . linst END SEMICOLON
    (2) linst -> . linst inst
    (3) linst -> . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (11) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (12) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (22) inst -> . IF LPAREN expression RPAREN THEN inst
    (23) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (24) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (25) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (28) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (29) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (30) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (31) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (32) inst -> . NAME LPAREN RPAREN SEMICOLON

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    linst                          shift and go to state 82
    inst                           shift and go to state 3

state 77

    (25) inst -> FOR LPAREN assign SEMICOLON expression . SEMICOLON assign RPAREN DO linst END SEMICOLON
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 83
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43


state 78

    (8) assign -> NAME EQUAL expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . AND expression
    (18) expression -> expression . EQUALS expression
    (19) expression -> expression . LOWER expression
    (20) expression -> expression . HIGHER expression
    (21) expression -> expression . DIVIDE expression

    SEMICOLON       reduce using rule 8 (assign -> NAME EQUAL expression .)
    RPAREN          reduce using rule 8 (assign -> NAME EQUAL expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    EQUALS          shift and go to state 40
    LOWER           shift and go to state 41
    HIGHER          shift and go to state 42
    DIVIDE          shift and go to state 43


state 79

    (28) inst -> FUNCTION NAME LPAREN params RPAREN . linst END SEMICOLON
    (2) linst -> . linst inst
    (3) linst -> . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (11) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (12) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (22) inst -> . IF LPAREN expression RPAREN THEN inst
    (23) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (24) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (25) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (28) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (29) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (30) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (31) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (32) inst -> . NAME LPAREN RPAREN SEMICOLON

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    linst                          shift and go to state 84
    inst                           shift and go to state 3

state 80

    (29) inst -> FUNCTION NAME LPAREN RPAREN linst . END SEMICOLON
    (2) linst -> linst . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (11) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (12) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (22) inst -> . IF LPAREN expression RPAREN THEN inst
    (23) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (24) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (25) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (28) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (29) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (30) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (31) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (32) inst -> . NAME LPAREN RPAREN SEMICOLON

    END             shift and go to state 85
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    inst                           shift and go to state 10

state 81

    (22) inst -> IF LPAREN expression RPAREN THEN inst .
    (23) inst -> IF LPAREN expression RPAREN THEN inst . ELSE inst

  ! shift/reduce conflict for ELSE resolved as shift
    NAME            reduce using rule 22 (inst -> IF LPAREN expression RPAREN THEN inst .)
    PRINT           reduce using rule 22 (inst -> IF LPAREN expression RPAREN THEN inst .)
    IF              reduce using rule 22 (inst -> IF LPAREN expression RPAREN THEN inst .)
    WHILE           reduce using rule 22 (inst -> IF LPAREN expression RPAREN THEN inst .)
    FOR             reduce using rule 22 (inst -> IF LPAREN expression RPAREN THEN inst .)
    FUNCTION        reduce using rule 22 (inst -> IF LPAREN expression RPAREN THEN inst .)
    $end            reduce using rule 22 (inst -> IF LPAREN expression RPAREN THEN inst .)
    END             reduce using rule 22 (inst -> IF LPAREN expression RPAREN THEN inst .)
    ELSE            shift and go to state 86

  ! ELSE            [ reduce using rule 22 (inst -> IF LPAREN expression RPAREN THEN inst .) ]


state 82

    (24) inst -> WHILE LPAREN expression RPAREN DO linst . END SEMICOLON
    (2) linst -> linst . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (11) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (12) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (22) inst -> . IF LPAREN expression RPAREN THEN inst
    (23) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (24) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (25) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (28) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (29) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (30) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (31) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (32) inst -> . NAME LPAREN RPAREN SEMICOLON

    END             shift and go to state 87
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    inst                           shift and go to state 10

state 83

    (25) inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON . assign RPAREN DO linst END SEMICOLON
    (8) assign -> . NAME EQUAL expression

    NAME            shift and go to state 32

    assign                         shift and go to state 88

state 84

    (28) inst -> FUNCTION NAME LPAREN params RPAREN linst . END SEMICOLON
    (2) linst -> linst . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (11) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (12) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (22) inst -> . IF LPAREN expression RPAREN THEN inst
    (23) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (24) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (25) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (28) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (29) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (30) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (31) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (32) inst -> . NAME LPAREN RPAREN SEMICOLON

    END             shift and go to state 89
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    inst                           shift and go to state 10

state 85

    (29) inst -> FUNCTION NAME LPAREN RPAREN linst END . SEMICOLON

    SEMICOLON       shift and go to state 90


state 86

    (23) inst -> IF LPAREN expression RPAREN THEN inst ELSE . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (11) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (12) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (22) inst -> . IF LPAREN expression RPAREN THEN inst
    (23) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (24) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (25) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (28) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (29) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (30) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (31) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (32) inst -> . NAME LPAREN RPAREN SEMICOLON

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    inst                           shift and go to state 91

state 87

    (24) inst -> WHILE LPAREN expression RPAREN DO linst END . SEMICOLON

    SEMICOLON       shift and go to state 92


state 88

    (25) inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign . RPAREN DO linst END SEMICOLON

    RPAREN          shift and go to state 93


state 89

    (28) inst -> FUNCTION NAME LPAREN params RPAREN linst END . SEMICOLON

    SEMICOLON       shift and go to state 94


state 90

    (29) inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .

    NAME            reduce using rule 29 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    PRINT           reduce using rule 29 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    IF              reduce using rule 29 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    WHILE           reduce using rule 29 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    FOR             reduce using rule 29 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    FUNCTION        reduce using rule 29 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    $end            reduce using rule 29 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    END             reduce using rule 29 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)
    ELSE            reduce using rule 29 (inst -> FUNCTION NAME LPAREN RPAREN linst END SEMICOLON .)


state 91

    (23) inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .

    NAME            reduce using rule 23 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    PRINT           reduce using rule 23 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    IF              reduce using rule 23 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    WHILE           reduce using rule 23 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    FOR             reduce using rule 23 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    FUNCTION        reduce using rule 23 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    $end            reduce using rule 23 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    END             reduce using rule 23 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)
    ELSE            reduce using rule 23 (inst -> IF LPAREN expression RPAREN THEN inst ELSE inst .)


state 92

    (24) inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .

    NAME            reduce using rule 24 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    PRINT           reduce using rule 24 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    IF              reduce using rule 24 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    WHILE           reduce using rule 24 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    FOR             reduce using rule 24 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    FUNCTION        reduce using rule 24 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    $end            reduce using rule 24 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    END             reduce using rule 24 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)
    ELSE            reduce using rule 24 (inst -> WHILE LPAREN expression RPAREN DO linst END SEMICOLON .)


state 93

    (25) inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN . DO linst END SEMICOLON

    DO              shift and go to state 95


state 94

    (28) inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .

    NAME            reduce using rule 28 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    PRINT           reduce using rule 28 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    IF              reduce using rule 28 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    WHILE           reduce using rule 28 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    FOR             reduce using rule 28 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    FUNCTION        reduce using rule 28 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    $end            reduce using rule 28 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    END             reduce using rule 28 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)
    ELSE            reduce using rule 28 (inst -> FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON .)


state 95

    (25) inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO . linst END SEMICOLON
    (2) linst -> . linst inst
    (3) linst -> . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (11) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (12) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (22) inst -> . IF LPAREN expression RPAREN THEN inst
    (23) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (24) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (25) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (28) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (29) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (30) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (31) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (32) inst -> . NAME LPAREN RPAREN SEMICOLON

    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    linst                          shift and go to state 96
    inst                           shift and go to state 3

state 96

    (25) inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst . END SEMICOLON
    (2) linst -> linst . inst
    (7) inst -> . NAME EQUAL expression SEMICOLON
    (11) inst -> . PRINT LPAREN params RPAREN SEMICOLON
    (12) inst -> . PRINT LPAREN expressions RPAREN SEMICOLON
    (22) inst -> . IF LPAREN expression RPAREN THEN inst
    (23) inst -> . IF LPAREN expression RPAREN THEN inst ELSE inst
    (24) inst -> . WHILE LPAREN expression RPAREN DO linst END SEMICOLON
    (25) inst -> . FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON
    (28) inst -> . FUNCTION NAME LPAREN params RPAREN linst END SEMICOLON
    (29) inst -> . FUNCTION NAME LPAREN RPAREN linst END SEMICOLON
    (30) inst -> . NAME LPAREN expressions RPAREN SEMICOLON
    (31) inst -> . NAME LPAREN params RPAREN SEMICOLON
    (32) inst -> . NAME LPAREN RPAREN SEMICOLON

    END             shift and go to state 97
    NAME            shift and go to state 4
    PRINT           shift and go to state 5
    IF              shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    FUNCTION        shift and go to state 9

    inst                           shift and go to state 10

state 97

    (25) inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END . SEMICOLON

    SEMICOLON       shift and go to state 98


state 98

    (25) inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .

    NAME            reduce using rule 25 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    PRINT           reduce using rule 25 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    IF              reduce using rule 25 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    WHILE           reduce using rule 25 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    FOR             reduce using rule 25 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    FUNCTION        reduce using rule 25 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    $end            reduce using rule 25 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    END             reduce using rule 25 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)
    ELSE            reduce using rule 25 (inst -> FOR LPAREN assign SEMICOLON expression SEMICOLON assign RPAREN DO linst END SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 22 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 59 resolved as shift
WARNING: shift/reduce conflict for OR in state 59 resolved as shift
WARNING: shift/reduce conflict for AND in state 59 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 59 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 59 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 59 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 60 resolved as shift
WARNING: shift/reduce conflict for OR in state 60 resolved as shift
WARNING: shift/reduce conflict for AND in state 60 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 60 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 60 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 60 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 61 resolved as shift
WARNING: shift/reduce conflict for OR in state 61 resolved as shift
WARNING: shift/reduce conflict for AND in state 61 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 61 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 61 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 61 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for OR in state 62 resolved as shift
WARNING: shift/reduce conflict for AND in state 62 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 62 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 63 resolved as shift
WARNING: shift/reduce conflict for OR in state 63 resolved as shift
WARNING: shift/reduce conflict for AND in state 63 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 63 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 64 resolved as shift
WARNING: shift/reduce conflict for AND in state 64 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 64 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for OR in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 65 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 65 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 65 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 66 resolved as shift
WARNING: shift/reduce conflict for OR in state 66 resolved as shift
WARNING: shift/reduce conflict for AND in state 66 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 66 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 66 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 66 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 67 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 67 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 67 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 67 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 81 resolved as shift
WARNING: reduce/reduce conflict in state 22 resolved using rule (expression -> NAME)
WARNING: rejected rule (params -> NAME) in state 22
